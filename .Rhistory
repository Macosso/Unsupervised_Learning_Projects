sapply(data[c("open","high","low","close","volume")],as.numeric)
View(data)
library(hablar)
install.packages(hablar)
# solution
data %>% mutate_if(is.character,as.numeric)
# solution
data1 <-data %>% mutate_if(is.character,as.numeric)
View(data1)
# solution
data <-data %>% mutate_if(data[-1],is.character,as.numeric)
# solution
data <-data %>% mutate_if(data[,-1],is.character,as.numeric)
# solution
data <-mutate_if(data[,c("open","high","low","close","volume")],is.character,as.numeric)
View(data1)
View(data)
data = structure(list(date = c("2021-11-24", "2021-11-24", "2021-11-26",
"2021-11-24", "2021-11-26", "2021-11-24", "2021-11-24", "2021-11-26",
"2021-11-26", "2021-11-26", "2021-11-26"), open = c("NaN", "NaN",
"0.43", "0.17", "0.19", "0.15", "NaN", "NaN", "NaN", "NaN", "NaN"
), high = c("NaN", "NaN", "0.43", "0.17", "0.19", "0.15", "NaN",
"NaN", "NaN", "NaN", "NaN"), low = c("NaN", "NaN", "0.43", "0.17",
"0.19", "0.15", "NaN", "NaN", "NaN", "NaN", "NaN"), close = c("NaN",
"NaN", "0.43", "0.17", "0.19", "0.15", "NaN", "NaN", "NaN", "NaN",
"NaN"), volume = c(0L, 0L, 2L, 10L, 75L, 1L, 0L, 0L, 0L, 0L,
0L)), row.names = c(NA, -11L), class = c("data.table", "data.frame"
))
data[is.na(data$open),]
data
# solution
data$date <- as.Date(data$date)
View(data)
data1 <- data %>% mutate_if(,is.character,as.numeric)
data1 <- data %>% mutate_if(is.character,as.numeric)
View(data1)
data1[apply(data1[2:5], 1, function(X) all(!is.nan(X))),]
data1[apply(data1[2:5], function(X) any(!is.nan(X))),]
data1[apply(data1[2:5],1, function(X) any(!is.nan(X))),]
data = structure(list(date = c("2021-11-24", "2021-11-24", "2021-11-26",
"2021-11-24", "2021-11-26", "2021-11-24", "2021-11-24", "2021-11-26",
"2021-11-26", "2021-11-26", "2021-11-26"), open = c("NaN", "NaN",
"0.43", "0.17", "0.19", "0.15", "NaN", "NaN", "NaN", "NaN", "NaN"
), high = c("NaN", "NaN", "0.43", "0.17", "0.19", "0.15", "NaN",
"NaN", "NaN", "NaN", "NaN"), low = c("NaN", "NaN", "0.43", "0.17",
"0.19", "0.15", "NaN", "NaN", "NaN", "NaN", "NaN"), close = c("NaN",
"NaN", "0.43", "0.17", "0.19", "0.15", "NaN", "NaN", "NaN", "NaN",
"NaN"), volume = c(0L, 0L, 2L, 10L, 75L, 1L, 0L, 0L, 0L, 0L,
0L)), row.names = c(NA, -11L), class = c("data.table", "data.frame"
))
data[any(data)=="NaN"]
data[any(data)=="NaN",]
data %>% filter_all(any_vars(.=="NaN"))
data %>% filter_all(any_vars(.!="NaN"))
data %>% filter_all(any_vars(.!="NaN"))
data %>% filter_all(!any_vars(.=="NaN"))
data %>% filter_all(any_vars(.!="NaN"))
data %>% filter_all(any_vars(.!="NaN"))
data %>% filter_all(any_vars(c("open","high","low","close")!="NaN"))
data %>% filter_all(any_vars(c("open","high","low","close")=="NaN"))
data %>% filter_all(any_vars(.=="NaN"))
data %>% filter_all(-any_vars(.=="NaN"))
data %>% filter_all(!!any_vars(.=="NaN"))
data %>% filter_all(any_vars(.!!="NaN"))
data %>% filter_all(any_vars(.!="NaN"))
data %>% filter_all(any_vars(. is.nan()))
data %>% filter_all(any_vars(is.nan(.)))
data %>% filter_all(any_vars(!is.nan(.)))
data1 <- data %>% mutate_if(is.character,as.numeric)
data1
data1 %>% filter_all(any_vars(!is.nan(.)))
View(data1)
data1 %>% filter_all(any_vars(is.numeric(.)))
data1 %>% filter_all(any_vars(is.nan(.)))
data1 %>% filter_all(any_vars(!is.nan(.)))
View(data)
View(data1)
data = structure(list(date = c("2021-11-24", "2021-11-24", "2021-11-26",
"2021-11-24", "2021-11-26", "2021-11-24", "2021-11-24", "2021-11-26",
"2021-11-26", "2021-11-26", "2021-11-26"), open = c("NaN", "NaN",
"0.43", "0.17", "0.19", "0.15", "NaN", "NaN", "NaN", "NaN", "NaN"
), high = c("NaN", "NaN", "0.43", "0.17", "0.19", "0.15", "NaN",
"NaN", "NaN", "NaN", "NaN"), low = c("NaN", "NaN", "0.43", "0.17",
"0.19", "0.15", "NaN", "NaN", "NaN", "NaN", "NaN"), close = c("NaN",
"NaN", "0.43", "0.17", "0.19", "0.15", "NaN", "NaN", "NaN", "NaN",
"NaN"), volume = c(0L, 0L, 2L, 10L, 75L, 1L, 0L, 0L, 0L, 0L,
0L)), row.names = c(NA, -11L), class = c("data.table", "data.frame"
))
data %>% filter_all(any_vars(. !="NaN"))
data %>% filter_all(any_vars(.=="NaN"))
data %>% filter_all(any_vars(.==NaN))
data %>% filter_all(any_vars(.!=NaN))
data %>% filter_all(any_vars(.==NaN)) %>% row_number()
data %>% filter_all(any_vars(.==NaN)) %>% rowid()
data %>% filter_all(any_vars(.==NaN)) %>% row.names()
data[-(data %>% filter_all(any_vars(.==NaN)) %>% row.names()),]
data[data %>% filter_all(any_vars(.==NaN)) %>% row.names(),]
%notin% <- Negate(%in%)
"%notin%" <- Negate("%in%")
data[row.names(data) "%notin%" data %>% filter_all(any_vars(.==NaN)) %>% row.names(),]
`%notin%` <- Negate(`%in%`)
data[row.names(data) "%notin%" data %>% filter_all(any_vars(.==NaN)) %>% row.names(),]
`%notin%` <- Negate(`%in%`)
rm_rw <- data %>% filter_all(any_vars(.==NaN) %>% row.names()
data[row.names(data) "%notin%" rm_rw) ,]
rm_rw <- data %>% filter_all(any_vars(.==NaN) %>% row.names())
data %>% filter_all(any_vars(.==NaN)) %>% row.names()
rm_rw <- data %>% filter_all(any_vars(.==NaN)) %>% row.names()
data[row.names(data) "%notin%" rm_rw ,]
data[row.names(data) %notin% rm_rw ,]
data
rm_rw <- data %>% filter_all(any_vars(.==NaN)) %>% row.names()
rm_rw
data[any(data)==NaN]
data[rowSums(is.nan(as.matrix(df[2:5])))>1]
data[rowSums(is.nan(as.matrix(data[2:5])))>1,]
row.names(data[apply(data[2:3], 1, function(X) all(is.nan(X))),])
[apply(data[2:3], 1, function(X) all(is.nan(X))),]
data[apply(data, 1, function(X) all(is.nan(X))),]
row.names(data[apply(data, 1, function(X) any(. == NaN)),])
row.names(data[apply(data, 1, function(X) any(. == "NaN")),])
row.names(data[apply(data, 1, function(X) any( == "NaN")),])
row.names(data[apply(data, 1, function(X) any(X== "NaN")),])
data
row.names(data[apply(data, 1, function(X) any(X== "NaN",arr.ind=T)),])
row.names(data[apply(data, 1, function(X) any(X== "NaN",arr.ind=F)),])
row.names(data[apply(data, 1, function(X) any(X== "NaN", arr.ind=F)),])
row.names(data[apply(data, 1, function(X) all(X== "NaN", arr.ind=F)),])
row.names(data[apply(data, 1, function(X) which(X== "NaN", arr.ind=F)),])
?any
data$Row <- row.names(data)
data[apply(data, 1, function(X) any(X== "NaN", arr.ind=F)),][,"Row"]
rm_rw <- data[apply(data, 1, function(X) any(X== "NaN", arr.ind=F)),][,"Row"]
data[row.names(data) %notin% rm_rw ,]
rm_rw
data[row.names(data) %notin% character(rm_rw) ,]
rm_rw <- data[apply(data, 1, function(X) any(X== "NaN", arr.ind=F)),] %>% pull(Row)
data[row.names(data) %notin% rm_rw ,]
data[!row.names(data) %in% rm_rw ,]
data[!row.names(data) %in% rm_rw ,] %>% select(-Row)
data2<-data[!row.names(data) %in% rm_rw ,] %>% select(-Row)
data = structure(list(date = c("2021-11-24", "2021-11-24", "2021-11-26",
"2021-11-24", "2021-11-26", "2021-11-24", "2021-11-24", "2021-11-26",
"2021-11-26", "2021-11-26", "2021-11-26"), open = c("NaN", "NaN",
"0.43", "0.17", "0.19", "0.15", "NaN", "NaN", "NaN", "NaN", "NaN"
), high = c("NaN", "NaN", "0.43", "0.17", "0.19", "0.15", "NaN",
"NaN", "NaN", "NaN", "Inf"), low = c("NaN", "NaN", "0.43", "0.17",
"0.19", "0.15", "NaN", "NaN", "NaN", "NaN", "NaN"), close = c("NaN",
"NaN", "0.43", "0.17", "0.19", "0.15", "NaN", "NaN", "NaN", "NaN",
"NaN"), volume = c(0L, 0L, 2L, 10L, 75L, 1L, 0L, 0L, 0L, 0L,
0L)), row.names = c(NA, -11L), class = c("data.table", "data.frame"
))
library(dplyr)
data$Row <- row.names(data)
rm_rw <- data[apply(data, 1,
function(X) any(X== "NaN")),] %>% pull(Row)
data[!row.names(data) %in% rm_rw ,] %>% select(-Row)
data = structure(list(date = c("2021-11-24", "2021-11-24", "2021-11-26",
"2021-11-24", "2021-11-26", "2021-11-24", "2021-11-24", "2021-11-26",
"2021-11-26", "2021-11-26", "2021-11-26"), open = c("NaN", "NaN",
"0.43", "0.17", "0.19", "0.15", "NaN", "NaN", "NaN", "NaN", "NaN"
), high = c("NaN", "NaN", "0.43", "0.17", "0.19", "0.15", "NaN",
"NaN", "NaN", "NaN", "Inf"), low = c("NaN", "NaN", "0.43", "0.17",
"0.19", "Inf", "NaN", "NaN", "NaN", "NaN", "NaN"), close = c("NaN",
"NaN", "0.43", "0.17", "0.19", "0.15", "NaN", "NaN", "NaN", "NaN",
"NaN"), volume = c(0L, 0L, 2L, 10L, 75L, 1L, 0L, 0L, 0L, 0L,
0L)), row.names = c(NA, -11L), class = c("data.table", "data.frame"
))
library(dplyr)
data$Row <- row.names(data)
rm_rw <- data[apply(data, 1,
function(X) any(X== "NaN")),] %>% pull(Row)
data[!row.names(data) %in% rm_rw ,] %>% select(-Row)
View(data)
View(data)
data = structure(list(date = c("2021-11-24", "2021-11-24", "2021-11-26",
"2021-11-24", "2021-11-26", "2021-11-24", "2021-11-24", "2021-11-26",
"2021-11-26", "2021-11-26", "2021-11-26"), open = c("NaN", "NaN",
"0.43", "0.17", "0.19", "0.15", "NaN", "NaN", "NaN", "NaN", "NaN"
), high = c("NaN", "NaN", "0.43", "0.17", "0.19", "0.15", "NaN",
"NaN", "NaN", "NaN", "Inf"), low = c("NaN", "NaN", "0.43", "0.17",
"0.19", "0.15", "NaN", "NaN", "NaN", "NaN", "NaN"), close = c("NaN",
"NaN", "0.43", "0.17", "0.19", "0.15", "NaN", "NaN", "NaN", "NaN",
"NaN"), volume = c(0L, 0L, 2L, 10L, 75L, 1L, 0L, 0L, 0L, 0L,
0L)), row.names = c(NA, -11L), class = c("data.table", "data.frame"
))
library(dplyr)
data$Row <- row.names(data)
rm_rw <- data[apply(data, 1,
function(X) any(X== "NaN")),] %>% pull(Row)
data[!row.names(data) %in% rm_rw ,] %>% select(-Row)
data = structure(list(date = c("2021-11-24", "2021-11-24", "2021-11-26",
"2021-11-24", "2021-11-26", "2021-11-24", "2021-11-24", "2021-11-26",
"2021-11-26", "2021-11-26", "2021-11-26"), open = c("NaN", "NaN",
"0.43", "0.17", "0.19", "0.15", "NaN", "NaN", "NaN", "NaN", "NaN"
), high = c("NaN", "NaN", "0.43", "0.17", "0.19", "0.15", "NaN",
"NaN", "NaN", "NaN", "Inf"), low = c("NaN", "NaN", "0.43", "0.17",
"0.19", "Inf", "NaN", "NaN", "NaN", "NaN", "NaN"), close = c("NaN",
"NaN", "0.43", "0.17", "0.19", "0.15", "NaN", "NaN", "NaN", "NaN",
"NaN"), volume = c(0L, 0L, 2L, 10L, 75L, 1L, 0L, 0L, 0L, 0L,
0L)), row.names = c(NA, -11L), class = c("data.table", "data.frame"
))
library(dplyr)
data$Row <- row.names(data)
rm_rw <- data[apply(data, 1,
function(X) any(X== "NaN")),] %>% pull(Row)
data[!row.names(data) %in% rm_rw ,] %>% select(-Row)
rm_rw <- data[apply(data, 1,
function(X) any(X== "NaN"|X== "Inf")),] %>% pull(Row)
data[!row.names(data) %in% rm_rw ,] %>% select(-Row)
df <- data.frame(prod, cost)
prod <- 1:14
cost = c(110,	260,	380,	490,	580,	680,	790,	910,	1040,	1180,	1340,	1570,	1840,	2170)
df <- data.frame(prod, cost)
df <- df %>%
mutate(profit = 200*prod - cost - 83*prod)
View(df)
df <- df %>%
View(df)
df <- df %>%
mutate(profit = 200*prod - cost - 83*(prod-5))
df <- data.frame(prod, cost)
df <- df %>%
mutate(profit = 200*prod - cost - 83*(prod-5))
View(df)
View(df)
View(df)
View(df)
df <- df %>%
mutate(profit = 200*prod - cost - 35*(prod-5))
View(df)
df <- df %>%
mutate(profit = 200*prod - cost - 60*(prod-5))
df <- df %>%
mutate(profit = 200*prod - cost - 60*(prod-5))
View(df)
df <- df %>%
mutate(profit = 200*prod - cost - 55*(prod-5))
View(df)
df <- df %>%
mutate(profit = 200*prod - cost - 49*(prod-5))
View(df)
df <- df %>%
mutate(profit = 200*prod - cost - 68*(prod-5))
View(df)
for (i in 1:11){
p = p*i
}
for (i in 1:11){
print(i)
}
for (i in 1:11){
b[i]=i
return(b)
}
b=vector()
for (i in 1:11){
b[i]=i
return(b)
}
b=vector()
for (i in 1:11){
b[i]=i
print(b)
}
b
b=vector()
for (i in 1:11){
b[i]=i
prod(b)
}
print(prod(b))
for (i in 1:11){
b[i]=i
print(prod(b))
}
b=vector()
for (i in 1:11){
b[i]=i
print(prod(b))
}
b
for (i in 1:11){
b=vector()
b[i]=i
print(prod(b))
}
b=vector()
for (i in 1:11){
b[i]=i
print(prod(b))
}
b
b=vector()
for (i in 1:12){
b[i]=i
print(prod(b))
}
b
prod(1:12)
b=vector()
for (i in 12:1){
b[i]=i
print(prod(b))
}
12:1
b=vector()
for (i in 12:1){
b[i]=i
print(prod(b))
}
prod(12:1)
b=list()
for (i in 12:1){
b[[i]]=i
print(prod(b))
}
View(b)
b=vector()
for (i in 1:12){
b[i]=i
print(prod(b))
}
RG <- read.csv(file.choose())
date()
date(1:5)
date()-1
?remove()
library(tidyverse)
library(WDI)
library(survminer)
rm(list = ls())
test <- WDIsearch("GNI")
ODA_Gloss <- WDIsearch("Net ODA received")
indicators <- c("DT.ODA.ODAT.GN.ZS","NY.GDP.MKTP.CD","DT.ODA.ODAT.GD.ZS",
"DT.ODA.ODAT.XP.ZS","DT.ODA.ALLD.XP.ZS","NY.GNP.MKTP.CD")
ODA_DATA <- WDI(indicator = indicators,
country = "all", start=1985, end=2020,extra=T)
ODA_DATA <- ODA_DATA %>%
filter(is.na(region) | region != "Aggregates") %>%
select(-c(iso2c,region,iso3c,capital,longitude,latitude,income,lending)) %>%
group_by(country, year) %>%
summarise(across(everything(), ~ if_else(all(is.na(.x)), NA_real_, sum(.x, na.rm = TRUE)))) %>%
mutate(ODA_GNI = (DT.ODA.ODAT.GN.ZS/100)*NY.GNP.MKTP.CD,
ODA_GDP = (DT.ODA.ODAT.GD.ZS/100)*NY.GDP.MKTP.CD,
GNI_GDP_ODA = ODA_GNI/ODA_GDP)
ODA_DATA %>%
filter(DT.ODA.ODAT.GN.ZS[year==1985] >= 5 | DT.ODA.ODAT.GD.ZS[year==1985] >= 5)
ODA_DATA %>%
filter(DT.ODA.ODAT.GN.ZS[year==1985] >= 5 | DT.ODA.ODAT.GD.ZS[year==1985] >= 5) %>% unique(country)
ODA_DATA %>%
filter(DT.ODA.ODAT.GN.ZS[year==1985] >= 5 | DT.ODA.ODAT.GD.ZS[year==1985] >= 5) %>%
select(country, year, ODA_GNI) %>%
ggplot(aes(x=year, y = ODA_GNI)) +
geom_line(aes(color = country))
ODA_DATA %>%
filter(DT.ODA.ODAT.GN.ZS[year==1985] >= 10 | DT.ODA.ODAT.GD.ZS[year==1985] >= 10) %>%
select(country, year, ODA_GNI) %>%
ggplot(aes(x=year, y = ODA_GNI)) +
geom_line(aes(color = country))
View(ODA_DATA)
ODA_DATA %>%
filter(DT.ODA.ODAT.GN.ZS[year==1985] >= 10 | DT.ODA.ODAT.GD.ZS[year==1985] >= 10) %>%
ggplot(aes(x=year, y = ODA_GNI)) +
geom_line(aes(color = country))
View(ODA_DATA)
install.packages(tinytex)
install.packages("tinytex")
install.packages("tinytex")
tinytex::install_tinytex()
Y
$ conda deactivate
knitr::opts_chunk$set(echo = TRUE)
app_reviews <- read.csv("app reviews and ratings.csv")
head(app_reviews)
knitr::opts_chunk$set(echo = TRUE)
app_reviews <- read.csv("app reviews and ratings.csv")
knitr::opts_chunk$set(echo = TRUE)
app_reviews <- read.csv("app reviews and ratings.csv")
head(app_reviews)
$ conda activate r-reticulate
tinytex::install_tinytex()
library(tinytex)
print("AAF")
TinyTeX
tinytex::install_tinytex()
app_reviews[,c("Review","app_reviews")]
app_reviews[,c("Review","Age_Rating")]
app_reviews <- read.csv("app reviews and ratings.csv")
head(app_reviews)
model_km2 <- kmeans(app_reviews[,c("Review","Age_Rating")], centers = 2)
# Extract the cluster assignment vector from the kmeans model
clust_km2 <- model_km2$cluster
# Create a new data frame appending the cluster assignment
app_reviews_km2 <- mutate(app_reviews, cluster = clust_km2)
# Plot the positions of the players and color them using their cluster
ggplot(lineup_km2, aes(x = Review, y = app_reviews, color = factor(clust_km2))) +
geom_point()
app_reviews <- read.csv("app reviews and ratings.csv")
head(app_reviews)
model_km2 <- kmeans(app_reviews[,c("Review","Age_Rating")], centers = 2)
# Extract the cluster assignment vector from the kmeans model
clust_km2 <- model_km2$cluster
# Create a new data frame appending the cluster assignment
app_reviews_km2 <- mutate(app_reviews, cluster = clust_km2)
# Plot the positions of the players and color them using their cluster
ggplot(lineup_km2, aes(x = Review, y = app_reviews, color = factor(clust_km2))) +
geom_point()
library(tidyverse)
app_reviews <- read.csv("app reviews and ratings.csv")
head(app_reviews)
model_km2 <- kmeans(app_reviews[,c("Review","Age_Rating")], centers = 2)
clust_km2 <- model_km2$cluster
app_reviews_km2 <- mutate(app_reviews, cluster = clust_km2)
ggplot(lineup_km2, aes(x = Review, y = app_reviews, color = factor(clust_km2))) +
geom_point()
clust_km2
app_reviews <- read.csv("app reviews and ratings.csv")
head(app_reviews)
model_km2 <- kmeans(app_reviews[,c("Review","Age_Rating")], centers = 2)
clust_km2 <- model_km2$cluster
app_reviews_km2 <- mutate(app_reviews, cluster = clust_km2)
ggplot(app_reviews_km2, aes(x = Review, y = app_reviews, color = factor(clust_km2))) +
geom_point()
app_reviews_km2
app_reviews_km2
View(app_reviews_km2)
ggplot(app_reviews_km2, aes(x = Review, y = app_reviews, color = factor(cluster))) +
geom_point()
ggplot(app_reviews_km2, aes(x = Review, y = Age_Rating, color = factor(cluster))) +
geom_point()
app_reviews <- app_reviews[,c("Review","Age_Rating")]
app_reviews <- scale(app_reviews)
model_km2 <- kmeans(, centers = 2)
clust_km2 <- model_km2$cluster
app_reviews_km2 <- mutate(app_reviews, cluster = clust_km2)
ggplot(app_reviews_km2, aes(x = Review, y = Age_Rating, color = factor(cluster))) +
geom_point()
View(app_reviews)
app_reviews <- read.csv("app reviews and ratings.csv")
head(app_reviews)
app_reviews <- app_reviews[,c("Review","Age_Rating")]
app_reviews <- as.data.frame(scale(app_reviews))
model_km2 <- kmeans(, centers = 2)
clust_km2 <- model_km2$cluster
app_reviews_km2 <- mutate(app_reviews, cluster = clust_km2)
ggplot(app_reviews_km2, aes(x = Review, y = Age_Rating, color = factor(cluster))) +
geom_point()
View(app_reviews)
app_reviews <- read.csv("app reviews and ratings.csv")
app_reviews <- read.csv("app reviews and ratings.csv")
setwd("G:\\My Drive\\UW WNE\\Data Science\\Semester1\\Unsupervised Learning\\Project")
library(tidyverse)
app_reviews <- read.csv("app reviews and ratings.csv")
colnames(app_reviews)
app_reviews <- app_reviews %>%
group_by("App_Name","Date_Published","Review","Link","Age_Rating") %>%
summarise(Platforms = n())
View(app_reviews)
library(tidyverse)
app_reviews <- read.csv("app reviews and ratings.csv")
head(app_reviews)
app_reviews <- app_reviews %>%
group_by("App_Name","Date_Published","Review","Link","Age_Rating") %>%
summarise(Platforms = n())
View(app_reviews)
library(tidyverse)
app_reviews <- read.csv("app reviews and ratings.csv")
head(app_reviews)
app_reviews <- app_reviews %>%
group_by(App_Name,Date_Published,Review,Link,Age_Rating) %>%
summarise(Platforms = n())
View(app_reviews)
colnames(app_reviews)
app_reviews <- app_reviews[,c("Review","Age_Rating")]
app_reviews <- as.data.frame(scale(app_reviews))
model_km2 <- kmeans(, centers = 2)
clust_km2 <- model_km2$cluster
app_reviews_km2 <- mutate(app_reviews, cluster = clust_km2)
ggplot(app_reviews_km2, aes(x = Review, y = Age_Rating, color = factor(cluster))) +
geom_point()
app_reviews <- read.csv("app reviews and ratings.csv")
head(app_reviews)
app_reviews <- app_reviews %>%
group_by(App_Name,Date_Published,Review,Link,Age_Rating) %>%
summarise(Platforms = n())
colnames(app_reviews)
app_reviews <- app_reviews[,c("Review","Age_Rating")]
app_reviews <- as.data.frame(scale(app_reviews))
model_km2 <- kmeans(, centers = 2)
model_km2 <- kmeans(app_reviews, centers = 2)
clust_km2 <- model_km2$cluster
app_reviews_km2 <- mutate(app_reviews, cluster = clust_km2)
ggplot(app_reviews_km2, aes(x = Review, y = Age_Rating, color = factor(cluster))) +
geom_point()
setwd("G:\\My Drive\\UW WNE\\Data Science\\Semester1\\Unsupervised Learning\\Project")
library(tidyverse)
Customers <- read.csv("Mall_Customers.csv")
head(app_reviews)
rm(list = ls())
setwd("G:\\My Drive\\UW WNE\\Data Science\\Semester1\\Unsupervised Learning\\Project")
library(tidyverse)
Customers <- read.csv("Mall_Customers.csv")
head(Customers)
View(Customers)
tinytex::tlmgr_install("pdfcrop")
tools::find_gs_cmd()
Sys.getenv("R_GSCMD")
Sys.setenv(R_GSCMD="C:/Program Files/gs/gs9.53.3/bin/gswin64.exe")
1+2
tools::find_gs_cmd()
Sys.getenv("R_GSCMD")
